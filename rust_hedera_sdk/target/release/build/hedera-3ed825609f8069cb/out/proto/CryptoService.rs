// This file is generated by rust-protobuf 2.3.0. Do not edit
// @generated

// https://github.com/Manishearth/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy)]

#![cfg_attr(rustfmt, rustfmt_skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unsafe_code)]
#![allow(unused_imports)]
#![allow(unused_results)]

use protobuf::Message as Message_imported_for_functions;
use protobuf::ProtobufEnum as ProtobufEnum_imported_for_functions;

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x13CryptoService.proto\x12\x05proto\x1a\x0bQuery.proto\x1a\x0eRespons\
    e.proto\x1a\x19TransactionResponse.proto\x1a\x11Transaction.proto2\xb1\
    \x06\n\rCryptoService\x12?\n\rcreateAccount\x12\x12.proto.Transaction\
    \x1a\x1a.proto.TransactionResponse\x12?\n\rupdateAccount\x12\x12.proto.T\
    ransaction\x1a\x1a.proto.TransactionResponse\x12@\n\x0ecryptoTransfer\
    \x12\x12.proto.Transaction\x1a\x1a.proto.TransactionResponse\x12>\n\x0cc\
    ryptoDelete\x12\x12.proto.Transaction\x1a\x1a.proto.TransactionResponse\
    \x12:\n\x08addClaim\x12\x12.proto.Transaction\x1a\x1a.proto.TransactionR\
    esponse\x12=\n\x0bdeleteClaim\x12\x12.proto.Transaction\x1a\x1a.proto.Tr\
    ansactionResponse\x12)\n\x08getClaim\x12\x0c.proto.Query\x1a\x0f.proto.R\
    esponse\x122\n\x11getAccountRecords\x12\x0c.proto.Query\x1a\x0f.proto.Re\
    sponse\x121\n\x10cryptoGetBalance\x12\x0c.proto.Query\x1a\x0f.proto.Resp\
    onse\x12/\n\x0egetAccountInfo\x12\x0c.proto.Query\x1a\x0f.proto.Response\
    \x127\n\x16getTransactionReceipts\x12\x0c.proto.Query\x1a\x0f.proto.Resp\
    onse\x129\n\x18getFastTransactionRecord\x12\x0c.proto.Query\x1a\x0f.prot\
    o.Response\x122\n\x11getTxRecordByTxID\x12\x0c.proto.Query\x1a\x0f.proto\
    .Response\x126\n\x15getStakersByAccountID\x12\x0c.proto.Query\x1a\x0f.pr\
    oto.ResponseB(\n&com.hederahashgraph.service.proto.javab\x06proto3\
";

static mut file_descriptor_proto_lazy: ::protobuf::lazy::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::lazy::Lazy {
    lock: ::protobuf::lazy::ONCE_INIT,
    ptr: 0 as *const ::protobuf::descriptor::FileDescriptorProto,
};

fn parse_descriptor_proto() -> ::protobuf::descriptor::FileDescriptorProto {
    ::protobuf::parse_from_bytes(file_descriptor_proto_data).unwrap()
}

pub fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    unsafe {
        file_descriptor_proto_lazy.get(|| {
            parse_descriptor_proto()
        })
    }
}
