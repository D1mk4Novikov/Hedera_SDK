// This file is generated by rust-protobuf 2.3.0. Do not edit
// @generated

// https://github.com/Manishearth/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy)]

#![cfg_attr(rustfmt, rustfmt_skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unsafe_code)]
#![allow(unused_imports)]
#![allow(unused_results)]

use protobuf::Message as Message_imported_for_functions;
use protobuf::ProtobufEnum as ProtobufEnum_imported_for_functions;

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11FileService.proto\x12\x05proto\x1a\x0bQuery.proto\x1a\x0eResponse.\
    proto\x1a\x19TransactionResponse.proto\x1a\x11Transaction.proto2\xe7\x03\
    \n\x0bFileService\x12<\n\ncreateFile\x12\x12.proto.Transaction\x1a\x1a.p\
    roto.TransactionResponse\x12<\n\nupdateFile\x12\x12.proto.Transaction\
    \x1a\x1a.proto.TransactionResponse\x12<\n\ndeleteFile\x12\x12.proto.Tran\
    saction\x1a\x1a.proto.TransactionResponse\x12?\n\rappendContent\x12\x12.\
    proto.Transaction\x1a\x1a.proto.TransactionResponse\x12/\n\x0egetFileCon\
    tent\x12\x0c.proto.Query\x1a\x0f.proto.Response\x12,\n\x0bgetFileInfo\
    \x12\x0c.proto.Query\x1a\x0f.proto.Response\x12=\n\x0badminDelete\x12\
    \x12.proto.Transaction\x1a\x1a.proto.TransactionResponse\x12?\n\radminUn\
    delete\x12\x12.proto.Transaction\x1a\x1a.proto.TransactionResponseB(\n&c\
    om.hederahashgraph.service.proto.javab\x06proto3\
";

static mut file_descriptor_proto_lazy: ::protobuf::lazy::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::lazy::Lazy {
    lock: ::protobuf::lazy::ONCE_INIT,
    ptr: 0 as *const ::protobuf::descriptor::FileDescriptorProto,
};

fn parse_descriptor_proto() -> ::protobuf::descriptor::FileDescriptorProto {
    ::protobuf::parse_from_bytes(file_descriptor_proto_data).unwrap()
}

pub fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    unsafe {
        file_descriptor_proto_lazy.get(|| {
            parse_descriptor_proto()
        })
    }
}
